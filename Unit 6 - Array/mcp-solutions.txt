Question 1:
Answer: D) 10

Explanation:
- The loop increments i by 2, so it accesses elements at indices 0, 2, and 4
- arr[0] = 3, arr[2] = 5, arr[4] = 2
- total = 3 + 5 + 2 = 10


Question 2:
Answer: D) 19

Explanation:
- The array values becomes [0, 1, 4, 9, 16] (each element is iÂ²)
- result = values[2] + values[4] - values[1]
- result = 4 + 16 - 1 = 19


Question 3:
Answer: C) Reverses the order of elements in the array

Explanation:
- The method swaps elements between the beginning and end of the array
- For example, the first element (index 0) is swapped with the last element (index length-1)
- The second element (index 1) is swapped with the second-to-last element (index length-2)
- This process continues until the middle of the array is reached
- The result is that the array is reversed


Question 4:
Answer: D) 6

Explanation:
- The `modifyArray` method doubles each element in the array
- The array starts as {1, 2, 3, 4, 5} and becomes {2, 4, 6, 8, 10}
- nums[2] is now 6, so that's what's printed


Question 5:
Answer: C) 15

Explanation:
- This code uses an enhanced for loop which creates a copy of each array element
- Changes to the variable `x` do not affect the original array
- The array remains {5, 10, 15, 20, 25}
- arr[2] is 15, so that's what's printed